powershell

 python -m venv venv

.\venv\Scripts\Activate.ps1

.\.venv\Scripts\Activate.ps1

create the reuqirements.txt:
pip freeze | Out-File -Encoding utf8 requirements.txt


uvicorn app.main:app --reload
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000


Find all tracked .pyc files:
git ls-files | findstr /R "\.pyc$"

Untrack them all:
git ls-files | findstr /R "\.pyc$" | ForEach-Object { git rm --cached $_ }

Do the same for __pycache__ directories:
git ls-files | findstr "__pycache__" | ForEach-Object { git rm --cached $_ }

Commit the cleanup:
git commit -m "Remove tracked __pycache__ and .pyc files"



# A simple text encryption exercise using the Caesar Cipher technique.
# The Caesar Cipher for `shift = 3` cyclically shifts every letter of the word by 3 positions:
# a -> d, b -> e, c -> f, ..., x -> a, y -> b, z -> c

# Implement the encryption logic by shifting each alphabet character

def encrypt_text(text):
    encrypted = ""
    for char in text:
        if char.isalpha():  # check if the character is an alphabet
            shift = 3
            # TODO: Use the correct ASCII values to shift the character and add it to 'encrypted'
            if 97<= ord(char)<=122:
                encrypted += chr((ord(char)-ord('a')+shift) % 26 + ord('a'))
                # print(encrypted)
            # Hint 1: ord('A') = 65, ord('a') = 97
            elif 65 <= ord(char)<=90:
            # Hint 2: you can use modulo (%) operator to create a cycle
                encrypted += chr((ord(char)-ord('A')+shift) % 26 + ord('A'))
        else:
            encrypted += char  # keep non-alphabet characters unchanged
    return encrypted

# Example text to encrypt
original_text = "Hello, Python!"
# The encrypted_text function call and print statement should be the same as in the solution
encrypted_text = encrypt_text(original_text)
print(encrypted_text)  # The correct output after implementing the TODO should be 'Khoor, Sbwkrq!'